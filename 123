// MainForm 클래스 내부 어딘가(예: ApplyFilterAndBind 근처)에 추가
private IEnumerable<LogRow> FilterBySearch(IEnumerable<LogRow> source)
{
    var raw = (txtSearchVar.Text ?? "").Trim();
    if (string.IsNullOrEmpty(raw)) return source;

    // '|' 로 분리해서 OR 검색
    var keys = raw.Split('|')
                  .Select(s => s.Trim())
                  .Where(s => s.Length > 0)
                  .ToArray();

    if (keys.Length == 0) return source;

    return source.Where(r =>
    {
        var v = r.Var ?? "";
        // 하나라도 포함되면 OK (대소문자 무시)
        return keys.Any(k => v.IndexOf(k, StringComparison.OrdinalIgnoreCase) >= 0);
    });
}


txtSearchVar.KeyDown += (s, e) =>
{
    if (e.KeyCode == Keys.Enter)
    {
        e.SuppressKeyPress = true;
        btnSearch.PerformClick();
    }
};



private void ApplyFilterAndBind()
{
    IEnumerable<LogRow> q = rows;

    if (chkBROnly.Checked)
        q = q.Where(r => (r.Var ?? string.Empty).StartsWith("BR_", StringComparison.OrdinalIgnoreCase));

    // 기존:
    // var s = (txtSearchVar.Text ?? "").Trim();
    // if (!string.IsNullOrEmpty(s))
    //     q = q.Where(r => (r.Var ?? "").IndexOf(s, StringComparison.OrdinalIgnoreCase) >= 0);

    // 변경: '|' OR 검색 지원
    q = FilterBySearch(q);

    viewRows = q.OrderBy(r => r.Timestamp).ThenBy(r => r.LineIndex).ToList();
    BindLines(viewRows);

    var forMerged = rows.AsEnumerable();
    if (chkBROnly.Checked)
        forMerged = forMerged.Where(r => (r.Var ?? "").StartsWith("BR_", StringComparison.OrdinalIgnoreCase));

    // 결합쪽도 동일하게 OR 검색 적용
    forMerged = FilterBySearch(forMerged);

    mergedRows = BuildMergedQueue(forMerged.OrderBy(r => r.Timestamp).ThenBy(r => r.LineIndex));
    bsMerged.DataSource = mergedRows;
    gridMerged.DataSource = bsMerged;

    ToggleMode();
}
